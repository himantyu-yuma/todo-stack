name: Build and Push for Server

on:
  push:
    branches:
      - main

env:
  DOCKER_REGISTRY: docker.pkg.github.com
  DOCKER_IMAGE_PREFIX: todo-stack_

jobs:
  push_backend:
    # ソースコード一式を Docker コンテナーに封入して GitHub Packages にプッシュする
    name: Push backend docker image to GitHub Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [web, app]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login $DOCKER_REGISTRY -u ${{ github.actor }} --password-stdin

      - name: Build image
        run: |
          IMAGE_ID=$DOCKER_REGISTRY/${{ github.repository }}/${{ env.DOCKER_IMAGE_PREFIX }}${{ matrix.image }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          DOCKER_FILE=docker/${{ matrix.image }}/Dockerfile

          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
          echo "DOCKER_FILE=$DOCKER_FILE" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: backend
          platforms: linux/arm/v7
          file: ${{ env.DOCKER_FILE }}
          push: true
          tags: ${{ env.IMAGE_ID}}:latest

  push_frontend:
    # ソースコード一式を Docker コンテナーに封入して GitHub Packages にプッシュする
    name: Push frontend docker image to GitHub Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [frontend]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login $DOCKER_REGISTRY -u ${{ github.actor }} --password-stdin

      - name: Build image
        run: |
          IMAGE_ID=$DOCKER_REGISTRY/${{ github.repository }}/${{ env.DOCKER_IMAGE_PREFIX }}${{ matrix.image }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          DOCKER_FILE=Dockerfile

          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
          echo "DOCKER_FILE=$DOCKER_FILE" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: frontend
          platforms: linux/arm/v7
          file: ${{ env.DOCKER_FILE }}
          target: production
          push: true
          tags: ${{ env.IMAGE_ID}}:latest
